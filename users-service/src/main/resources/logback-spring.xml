<!-- 1.3.0 -->
<configuration debug="true">
    <!-- Настройки для dev окуржения -->
    <springProfile name="dev">
        <springProperty scope="context"
                        name="appender"
                        source="logging.appender"
                        defaultValue="stdout"/>

        <springProperty scope="context"
                        name="gelf.url"
                        source="logging.gelf.url"
                        defaultValue="graylog:12201"/>
    </springProfile>

    <!-- Настройки для локал окуржения -->
    <springProfile name="!dev">
        <springProperty scope="context"
                        name="appender"
                        source="logging.appender"
                        defaultValue="stdout,gelf"/>

        <springProperty scope="context"
                        name="gelf.url"
                        source="logging.gelf.url"
                        defaultValue="graylog:12201"/>
    </springProfile>

    <springProperty scope="context"
                    name="log.file.path"
                    source="logging.file.path"
                    defaultValue="log" />

    <!-- окружение(для вывода в грейлоге environment) -->
    <springProperty scope="context"
                    name="gelf.env"
                    source="logging.gelf.env"
                    defaultValue="dev" />

    <!-- порт грейлога -->
    <springProperty scope="context"
                    name="gelf.port"
                    source="logging.gelf.port"
                    defaultValue="12201" />

    <!-- максимальное количество файлов логов, для rolling file appender -->
    <springProperty scope="context"
                    name="maxHistory"
                    source="logging.roll-file.max-history"
                    defaultValue="10" />

    <!-- максимальный размер файла логов, для rolling file appender -->
    <springProperty scope="context"
                    name="maxFileSize"
                    source="logging.roll-file.max-size"
                    defaultValue="100MB" />

    <!-- максимальное размер всех файлов логов, для rolling file appender -->
    <springProperty scope="context"
                    name="totalSize"
                    source="logging.roll-file.total-size"
                    defaultValue="1GB" />

    <!-- глобальный уровень логирования -->
    <springProperty scope="context"
                    name="root.level"
                    source="logging.root.level"
                    defaultValue="INFO"/>

    <!-- имя приложения (для gelf используется как facility) -->
    <springProperty scope="context"
                    name="name"
                    source="spring.application.name"
                    defaultValue="users-service"/>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

    <!-- запись в консоль -->
    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("stdout")'>
        <then>
            <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
                <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                    <pattern>%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %level %clr([%X{X-B3-TraceId:-}]) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%13.-13t]){faint} %clr(%-30.30logger{30}){cyan} %clr(:){faint} %m%n%wEx</pattern>
                </encoder>
            </appender>
        </then>
    </if>

    <!-- запись логов в файл -->
    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("file")'>
        <then>
            <appender name="file" class="ch.qos.logback.core.FileAppender">
                <file>${log.file.path}/log-${name}.txt</file>
                <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                    <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{0} - %msg%n</pattern>
                </encoder>
            </appender>
        </then>
    </if>

    <!-- запис логов в файл, если размер файла превысил maxFileSize, то создается новый файл
         Общее количество файлов не может превышать maxHistory.
         Обший размер файлов не может превышать totalSize
         Если размер, или количество превышено удаляется самый старый файл -->
    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("roll_file")'>
        <then>
            <appender name="roll-file" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file>${log.file.path}/log-${name}.txt</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                    <fileNamePattern>log-${name}-%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
                    <maxHistory>${maxHistory}</maxHistory>
                    <maxFileSize>${maxFileSize}</maxFileSize>
                    <totalSizeCap>${totalSize}</totalSizeCap>
                </rollingPolicy>

                <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                    <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{0} - %msg%n</pattern>
                </encoder>
            </appender>
        </then>
    </if>

    <!-- запись в Graylog -->
    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("gelf")'>
        <then>
            <appender name="gelf" class="biz.paluch.logging.gelf.logback.GelfLogbackAppender">
                <host>udp:${gelf.url}</host>
                <port>${gelf.port}</port>
                <facility>${name}</facility>
                <extractStackTrace>true</extractStackTrace>
                <filterStackTrace>true</filterStackTrace>
                <additionalFields>environment=${gelf.env}</additionalFields>
                <includeFullMdc>true</includeFullMdc>
            </appender>
        </then>
    </if>

    <logger name="ch.qos.logback" level="WARN"/>
    <logger name="org.apache" level="ERROR"/>
    <logger name="org.springframework" level="ERROR"/>
    <logger name="com.zaxxer" level="ERROR"/>
    <logger name="org.hibernate" level="INFO"/>
    <logger name="com.radkevich" level="DEBUG"/>


    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("file")'>
        <then><root level="${root.level}"><appender-ref ref="file" /></root></then>
    </if>

    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("roll_file")'>
        <then><root level="${root.level}"><appender-ref ref="roll-file" /></root></then>
    </if>

    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("gelf")'>
        <then><root level="${root.level}"><appender-ref ref="gelf" /></root></then>
    </if>

    <if condition='java.util.Arrays.asList(property("appender").split(",")).contains("stdout")'>
        <then><root level="${root.level}"><appender-ref ref="stdout" /></root></then>
    </if>
</configuration>
