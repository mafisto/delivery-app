version: '3.8'

services:
  auth-server:
    container_name: auth-server
    ports:
      - "9500:9500"
    build:
      context: ./auth-server
      dockerfile: ./Dockerfile
    environment:
      SERVER_PORT: 9500
      JWT_ISSUER_URL: http://auth-server:9500
      DATASOURCE_URL: jdbc:postgresql://postgresql:5432/farel
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
      LOGGING_APPENDER_URL: graylog
      LOGGING_APPENDER_PORT: 12201
      LOGGING_APPENDER: gelf
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9500/actuator/health || exit 1
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s

  orders-service:
    container_name: orders-service
    ports:
      - "8081:8081"
    depends_on:
      auth-server:
        condition: service_healthy
    build:
      context: ./order-service
      dockerfile: ./Dockerfile
    environment:
      SERVER_PORT: 8081
      DATASOURCE_URL: jdbc:postgresql://postgresql:5432/farel
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      TOPIC_ORDER_CREATE: t.order.create
      TOPIC_CHANGE_DESTINATION: t.order.change.destination
      TOPIC_ORDER_CANCEL: t.order.cancel
      TOPIC_CHANGE_STATUS: t.order.change.status
      TOPIC_ASSIGN_COURIER: t.order.assign.courier
      TOPIC_CREATE_COURIER: t.order.create.courier
      TOPIC_CHANGE_LOCATION: t.order.change.location
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: farel
      MONGODB_USERNAME: mongodb
      MONGODB_PASSWORD: mongodb
      MONGODB_AUTH_DATABASE: admin
      LOGGING_APPENDER_URL: graylog
      LOGGING_APPENDER_PORT: 12201
      LOGGING_APPENDER: gelf
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s

  users-service:
    container_name: users-service
    ports:
      - "8082:8082"
    depends_on:
      orders-service:
        condition: service_healthy
    build:
      context: ./users-service
      dockerfile: ./Dockerfile
    environment:
      SERVER_PORT: 8082
      JWT_ISSUER_URL: http://auth-server:9500
      DATASOURCE_URL: jdbc:postgresql://postgresql:5432/farel
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      TOPIC_ORDER_CREATE: t.order.create
      TOPIC_ORDER_CANCEL: t.order.cancel
      TOPIC_CHANGE_DESTINATION: t.order.change.destination
      LOGGING_APPENDER_URL: graylog
      LOGGING_APPENDER_PORT: 12201
      LOGGING_APPENDER: gelf
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8082/actuator/health || exit 1
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s

  couriers-service:
    container_name: couriers-service
    ports:
      - "8083:8083"
    depends_on:
      users-service:
        condition: service_healthy
    build:
      context: ./couriers-service
      dockerfile: ./Dockerfile
    environment:
      SERVER_PORT: 8083
      JWT_ISSUER_URL: http://auth-server:9500
      DATASOURCE_URL: jdbc:postgresql://postgresql:5432/farel
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      TOPIC_CHANGE_STATUS: t.order.change.status
      TOPIC_CHANGE_LOCATION: t.order.change.location
      LOGGING_APPENDER_URL: graylog
      LOGGING_APPENDER_PORT: 12201
      LOGGING_APPENDER: gelf
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8083/actuator/health || exit 1
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s


  admin-service:
    container_name: admin-service
    ports:
      - "8084:8084"
    depends_on:
      couriers-service:
        condition: service_healthy
    build:
      context: ./admin-service
      dockerfile: ./Dockerfile
    environment:
      SERVER_PORT: 8084
      JWT_ISSUER_URL: http://auth-server:9500
      DATASOURCE_URL: jdbc:postgresql://postgresql:5432/farel
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      TOPIC_CHANGE_STATUS: t.order.change.status
      TOPIC_ASSIGN_COURIER: t.order.assign.courier
      TOPIC_CREATE_COURIER: t.order.create.courier
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: farel
      MONGODB_USERNAME: mongodb
      MONGODB_PASSWORD: mongodb
      MONGODB_AUTH_DATABASE: admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOGGING_APPENDER_URL: graylog
      LOGGING_APPENDER_PORT: 12201
      LOGGING_APPENDER: gelf
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8084/actuator/health || exit 1
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s



